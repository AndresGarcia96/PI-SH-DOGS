{"version":3,"sources":["redux/actions/index.js","redux/reducer/index.js","redux/store/index.js","components/landingPage/LandingPage.jsx","components/homePage/HomePage.jsx","App.js","reportWebVitals.js","index.js"],"names":["SEARCH_DOGS_BY_NAME","LOAD_DOGS","FILTER_DOGS","SORT_DOGS","SET_SORT","GET_DOG_DETAIL","CHANGE_PAGE","initialState","dogs","filteredDogs","dogDetail","searchQuery","filterBy","sortBy","sortOrder","currentPage","dogsPerPage","dogsReducer","state","arguments","length","undefined","action","type","_objectSpread","payload","_action$payload","filterValue","filter","dog","includes","_action$payload2","sortedDogs","_toConsumableArray","sort","a","b","nameA","name","toUpperCase","nameB","weightA","weight","metric","weightB","rootReducer","combineReducers","middlewares","thunkMiddleware","store","createStore","composeWithDevTools","applyMiddleware","apply","LandingPage","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","args","Array","_key","call","concat","handleEnterClick","props","history","push","_createClass","key","value","_jsxs","className","children","_jsx","onClick","this","Component","withRouter","HomePage","App","BrowserRouter","Route","exact","path","component","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","React","StrictMode","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.dd225e10.chunk.js","sourcesContent":["// Action Types\nexport const SEARCH_DOGS_BY_NAME = \"SEARCH_DOGS_BY_NAME\";\nexport const LOAD_DOGS = \"LOAD_DOGS\";\nexport const FILTER_DOGS = \"FILTER_DOGS\";\nexport const SORT_DOGS = \"SORT_DOGS\";\nexport const SET_SORT = \"SET_SORT\";\nexport const GET_DOG_DETAIL = \"GET_DOG_DETAIL\";\nexport const CHANGE_PAGE = \"CHANGE_PAGE\";\n\nimport axios from \"axios\";\n\n// Acción para buscar razas de perros por nombre\nexport const searchDogsByName = (name) => {\n  return async (dispatch) => {\n    try {\n      const res = await axios.get(\n        `http://localhost:3001/dogs/name?name=${name}`\n      );\n      dispatch({ type: SEARCH_DOGS_BY_NAME, payload: res.data });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\n// Acción para cargar los primeros resultados de razas de perros\nexport const loadDogs = () => {\n  return async (dispatch) => {\n    try {\n      const res = await axios.get(\"http://localhost:3001/dogs\");\n      dispatch({ type: LOAD_DOGS, payload: res.data });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\n// Acción para filtrar razas de perros por temperamento y origen\nexport const filterDogs = (temperament, origin) => {\n  return async (dispatch) => {\n    try {\n      const res = await axios.get(\n        `http://localhost:3001/dogs/filter?temperament=${temperament}&origin=${origin}`\n      );\n      dispatch({ type: FILTER_DOGS, payload: res.data });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\n// Acción para ordenar razas de perros alfabéticamente y por peso\nexport const sortDogs = (sortBy) => {\n  return async (dispatch) => {\n    try {\n      const res = await axios.get(\n        `http://localhost:3001/dogs/sort?sortBy=${sortBy}`\n      );\n      dispatch({ type: SORT_DOGS, payload: res.data });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\n// Acción para para cambiar el tipo de clasificación actual de la lista de razas de perros.\nexport const setSort = (sortType) => ({\n  type: SET_SORT,\n  payload: sortType,\n});\n\n// Acción para obtener el detalle de una raza de perro específica\nexport const getDogDetail = (dogID) => {\n  return async (dispatch) => {\n    try {\n      const res = await axios.get(`http://localhost:3001/dogs/id/${dogID}`);\n      dispatch({ type: GET_DOG_DETAIL, payload: res.data });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\n// Acción para cambiar la página actual del paginado\nexport const changePage = (page) => {\n  return { type: CHANGE_PAGE, payload: page };\n};\n","import {\n  SEARCH_DOGS_BY_NAME,\n  LOAD_DOGS,\n  FILTER_DOGS,\n  SET_SORT,\n  SORT_DOGS,\n  GET_DOG_DETAIL,\n  CHANGE_PAGE,\n} from \"../actions/index\";\n\nconst initialState = {\n  dogs: [], // Listado de razas de perros\n  filteredDogs: [], // Listado de razas de perros filtradas\n  dogDetail: null, // Detalle de una raza de perro específica\n  searchQuery: \"\", // Consulta de búsqueda por nombre de raza de perro\n  filterBy: \"\", // Filtro aplicado (temperamento, origen)\n  sortBy: \"\", // Tipo de clasificación (alfabético, peso)\n  sortOrder: \"\", // Orden de clasificación (ascendente, descendente)\n  currentPage: 1, // Página actual del paginado\n  dogsPerPage: 8, // Cantidad de perros por página\n};\n\nconst dogsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SEARCH_DOGS_BY_NAME:\n      return {\n        ...state,\n        searchQuery: action.payload,\n        currentPage: 1, // Reiniciar la página al realizar una búsqueda\n      };\n    case LOAD_DOGS:\n      return {\n        ...state,\n        dogs: action.payload,\n        filteredDogs: action.payload,\n      };\n    case FILTER_DOGS:\n      const { filterBy, filterValue } = action.payload;\n      let filteredDogs = state.dogs.filter((dog) => {\n        return dog[filterBy].includes(filterValue);\n      });\n      return {\n        ...state,\n        filteredDogs,\n        filterBy,\n      };\n    case SORT_DOGS:\n      const { sortBy, sortOrder } = action.payload;\n      let sortedDogs = [...state.filteredDogs];\n      if (sortBy === \"name\") {\n        sortedDogs.sort((a, b) => {\n          const nameA = a.name.toUpperCase();\n          const nameB = b.name.toUpperCase();\n          if (sortOrder === \"asc\") {\n            return nameA < nameB ? -1 : nameA > nameB ? 1 : 0;\n          } else {\n            return nameA > nameB ? -1 : nameA < nameB ? 1 : 0;\n          }\n        });\n      } else if (sortBy === \"weight\") {\n        sortedDogs.sort((a, b) => {\n          const weightA = a.weight.metric;\n          const weightB = b.weight.metric;\n          if (sortOrder === \"asc\") {\n            return weightA - weightB;\n          } else {\n            return weightB - weightA;\n          }\n        });\n      }\n      return {\n        ...state,\n        filteredDogs: sortedDogs,\n        sortBy,\n        sortOrder,\n      };\n    case SET_SORT:\n      return {\n        ...state,\n        sortBy: action.payload,\n      };\n    case GET_DOG_DETAIL:\n      return {\n        ...state,\n        dogDetail: action.payload,\n      };\n    case CHANGE_PAGE:\n      return {\n        ...state,\n        currentPage: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default dogsReducer;\n","// import { createStore, applyMiddleware, combineReducers } from \"redux\";\n// import thunk from \"redux-thunk\";\n// import dogsReducer from \"../reducer/index\";\n\n// // Combine todos los reducers en un reducer principal\n// const rootReducer = combineReducers({\n//   dogs: dogsReducer,\n// });\n\n// // Configura el middleware de thunk para manejar acciones asincrónicas\n// const middleware = [thunk];\n\n// // Crea el store de Redux con el reducer principal y el middleware\n// const store = createStore(rootReducer, applyMiddleware(...middleware));\n\n// export default store;\n\nimport { createStore, applyMiddleware, combineReducers } from \"redux\";\nimport thunkMiddleware from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport dogsReducer from \"../reducer/index\";\n\nconst rootReducer = combineReducers({\n  dogs: dogsReducer,\n});\n\nconst middlewares = [thunkMiddleware];\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(...middlewares))\n);\n\nexport default store;\n","import React, { Component } from 'react';\nimport \"./landingPage.css\";\n// Uso la funcion \"withRouter\" que proporciona acceso a las props del router, incluyendo history\n// se usa esta funcion porque es un componente clase, sino se usa el hook \"useHistory\" directamente\nimport { withRouter } from 'react-router';\n\nclass LandingPage extends Component {\n  handleEnterClick = () => {\n    this.props.history.push('/home');\n  };\n\n  render() {\n    return (\n      <div className='landing-page'>\n        <h1>Bienvenido a Henry Dogs</h1>\n        <button onClick={this.handleEnterClick}>Ingresar</button>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(LandingPage);","// import React, { useEffect } from \"react\";\n// import { useSelector, useDispatch } from \"react-redux\";\n// import { getDogs, getTemperaments, setPageNumber, filterByName, filterByTemperament } from \"../../redux/actions\";\n// import DogCard from \"../dogCard/DogCard\";\n// import SearchBar from \"../searchBar/SearchBar\";\n// import FilterDropDown from \"../filterDropDown/FilterDropDown\";\n// import Pagination from \"../pagination/Pagination\";\n// import \"./homePage.css\";\n\n// const HomePage = () => {\n//   const dispatch = useDispatch();\n\n//   useEffect(() => {\n//     dispatch(getDogs());\n//     dispatch(getTemperaments());\n//     dispatch(setPageNumber(1));\n//   }, [dispatch]);\n\n//   const dogs = useSelector((state) => state.dogs);\n//   const filteredDogs = useSelector((state) => state.filteredDogs);\n//   const temperaments = useSelector((state) => state.temperaments);\n//   const pageNumber = useSelector((state) => state.pageNumber);\n//   const dogsPerPage = useSelector((state) => state.dogsPerPage);\n\n//   const indexOfLastDog = pageNumber * dogsPerPage;\n//   const indexOfFirstDog = indexOfLastDog - dogsPerPage;\n//   const currentDogs = filteredDogs.length > 0 ? filteredDogs : dogs.slice(indexOfFirstDog, indexOfLastDog);\n//   const totalDogs = filteredDogs.length > 0 ? filteredDogs.length : dogs.length;\n\n//   const paginate = (pageNumber) => dispatch(setPageNumber(pageNumber));\n\n//   const handleSearch = (name) => {\n//     dispatch(filterByName(name));\n//     dispatch(setPageNumber(1));\n//   };\n\n//   const handleFilter = (temperament) => {\n//     dispatch(filterByTemperament(temperament));\n//     dispatch(setPageNumber(1));\n//   };\n\n//   return (\n//     <div className=\"container\">\n//       <div className=\"row mt-4\">\n//         <div className=\"col-md-4\">\n//           <SearchBar handleSearch={handleSearch} />\n//         </div>\n//         <div className=\"col-md-4\">\n//           <FilterDropDown temperaments={temperaments} handleFilter={handleFilter} />\n//         </div>\n//       </div>\n//       <div className=\"row mt-4\">\n//         {currentDogs.map((dog) => (\n//           <div className=\"col-md-4\" key={dog.id}>\n//             <DogCard dog={dog} />\n//           </div>\n//         ))}\n//       </div>\n//       <div className=\"row mt-4\">\n//         <div className=\"col-md-12 d-flex justify-content-center\">\n//           <Pagination dogsPerPage={dogsPerPage} totalDogs={totalDogs} paginate={paginate} />\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default HomePage;\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { loadDogs, searchDogsByName, filterDogs, sortDogs, setSort, changePage } from '../../redux/actions/index';\nimport DogsList from '../dogsList/DogsList';\nimport Filters from '../filters/Filters';\nimport Pagination from '../pagination/Pagination';\nimport SearchBar from '../searchBar/SearchBar';\nimport SortBy from '../sortBy/SortBy';\nimport SortOptions from '../sortOptions/SortOptions';\n\nconst HomePage = () => {\n  // const dispatch = useDispatch();\n  // const dogs = useSelector((state) => state.dogs);\n  // const { loading, error, filteredDogs, currentPage, dogsPerPage, searchValue, filterValue, sortValue } = dogs;\n\n  // useEffect(() => {\n  //   dispatch(loadDogs());\n  // }, [dispatch]);\n\n  // const handleSearch = (searchValue) => {\n  //   dispatch(searchDogsByName(searchValue));\n  // };\n\n  // const handleFilter = (filterValue) => {\n  //   dispatch(filterDogs(filterValue));\n  // };\n\n  // const handleSort = (sortValue) => {\n  //   dispatch(setSort(sortValue));\n  //   dispatch(sortDogs(sortValue));\n  // };\n\n  // const handlePageChange = (pageNumber) => {\n  //   dispatch(changePage(pageNumber));\n  // };\n\n  return (\n    <div>\n      <HomePage><h2>Hola</h2></HomePage>\n      {/* <SearchBar onSearch={handleSearch} searchValue={searchValue} />\n      <Filters onFilter={handleFilter} filterValue={filterValue} />\n      <SortBy onSort={handleSort} sortValue={sortValue} />\n      {error ? (\n        <div>Error: {error.message}</div>\n      ) : loading ? (\n        <div>Loading...</div>\n      ) : (\n        <div>\n          <DogsList dogs={filteredDogs} currentPage={currentPage} dogsPerPage={dogsPerPage} />\n          <Pagination\n            currentPage={currentPage}\n            itemsPerPage={dogsPerPage}\n            totalItems={filteredDogs.length}\n            onPageChange={handlePageChange}\n          />\n        </div>\n      )}\n      <SortOptions onSort={handleSort} sortValue={sortValue} /> */}\n    </div>\n  );\n};\n\nexport default HomePage;","import \"./App.css\";\nimport React from \"react\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport LandingPage from \"./components/landingPage/LandingPage\";\nimport HomePage from \"./components/homePage/HomePage\";\nimport DogDetails from \"./components/dogDetail/DogDetails\";\n\nfunction App() {\n  return (\n    <div>\n      <BrowserRouter>\n        <Route exact path=\"/\" component={LandingPage} />\n        <Route path=\"/home\" component={HomePage} />\n        {/* <Route path=\"/dogs/:id\" component={DogDetails} /> */}\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store/index\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
{"ast":null,"code":"// import { createStore, applyMiddleware, combineReducers } from \"redux\";\n// import thunkMiddleware from \"redux-thunk\";\n// import { composeWithDevTools } from \"redux-devtools-extension\";\n// import dogsReducer from \"../reducer/index\";\n\n// const rootReducer = combineReducers({\n//   dogs: dogsReducer,\n// });\n\n// const middlewares = [thunkMiddleware];\n\n// const store = createStore(\n//   rootReducer,\n//   composeWithDevTools(applyMiddleware(...middlewares))\n// );\n\n// export default store;\n\nimport { createStore, applyMiddleware, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport dogsReducer from \"../reducer/index\";\n\n// Combine todos los reducers en un reducer principal\nconst rootReducer = combineReducers({\n  dogs: dogsReducer\n});\n\n// Configura el middleware de thunk para manejar acciones asincrónicas\nconst middleware = [thunk];\n\n// Crea el store de Redux con el reducer principal y el middleware\nconst store = createStore(rootReducer, applyMiddleware(...middleware));\nexport default store;","map":{"version":3,"names":["createStore","applyMiddleware","combineReducers","thunk","dogsReducer","rootReducer","dogs","middleware","store"],"sources":["/Users/andy/Desktop/Soy Henry || Full Stack/PROYECTO INDIVIDUAL/PI-SH-DOGS/client/src/redux/store/index.js"],"sourcesContent":["// import { createStore, applyMiddleware, combineReducers } from \"redux\";\n// import thunkMiddleware from \"redux-thunk\";\n// import { composeWithDevTools } from \"redux-devtools-extension\";\n// import dogsReducer from \"../reducer/index\";\n\n// const rootReducer = combineReducers({\n//   dogs: dogsReducer,\n// });\n\n// const middlewares = [thunkMiddleware];\n\n// const store = createStore(\n//   rootReducer,\n//   composeWithDevTools(applyMiddleware(...middlewares))\n// );\n\n// export default store;\n\nimport { createStore, applyMiddleware, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport dogsReducer from \"../reducer/index\";\n\n// Combine todos los reducers en un reducer principal\nconst rootReducer = combineReducers({\n  dogs: dogsReducer,\n});\n\n// Configura el middleware de thunk para manejar acciones asincrónicas\nconst middleware = [thunk];\n\n// Crea el store de Redux con el reducer principal y el middleware\nconst store = createStore(rootReducer, applyMiddleware(...middleware));\n\nexport default store;\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,SAASA,WAAW,EAAEC,eAAe,EAAEC,eAAe,QAAQ,OAAO;AACrE,OAAOC,KAAK,MAAM,aAAa;AAC/B,OAAOC,WAAW,MAAM,kBAAkB;;AAE1C;AACA,MAAMC,WAAW,GAAGH,eAAe,CAAC;EAClCI,IAAI,EAAEF;AACR,CAAC,CAAC;;AAEF;AACA,MAAMG,UAAU,GAAG,CAACJ,KAAK,CAAC;;AAE1B;AACA,MAAMK,KAAK,GAAGR,WAAW,CAACK,WAAW,EAAEJ,eAAe,CAAC,GAAGM,UAAU,CAAC,CAAC;AAEtE,eAAeC,KAAK"},"metadata":{},"sourceType":"module"}
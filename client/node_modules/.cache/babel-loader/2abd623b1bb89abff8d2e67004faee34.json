{"ast":null,"code":"// Action Types\nexport const FIND_BREEDS_BY_NAME = \"FIND_BREEDS_BY_NAME\";\nimport axios from \"axios\";\n\n// acción para encontrar razas de perro por su nombre (que coincidan con el término de búsqueda)\nexport const findBreedsByName = name => async dispatch => {\n  try {\n    const res = await axios.get(`/dogs?name=${name}`);\n    dispatch({\n      type: FIND_BREEDS_BY_NAME,\n      payload: res.data\n    });\n  } catch (error) {\n    console.error(error);\n  }\n};\n\n// acción para obtener toda la lista de razas de perros\nexport const GET_ALL_BREEDS = \"GET_ALL_BREEDS\";\nexport const getAllBreeds = () => async dispatch => {\n  try {\n    const res = await axios.get(\"/dogs\");\n    dispatch({\n      type: GET_ALL_BREEDS,\n      payload: res.data\n    });\n  } catch (error) {\n    console.error(error);\n  }\n};\n\n// acción para obtener todos los temperamentos de las razas de perros\nexport const GET_ALL_TEMPERAMENTS = \"GET_ALL_TEMPERAMENTS\";\nexport const getAllTemperaments = () => async dispatch => {\n  try {\n    const res = await axios.get(\"/temperaments\");\n    dispatch({\n      type: GET_ALL_TEMPERAMENTS,\n      payload: res.data\n    });\n  } catch (error) {\n    console.error(error);\n  }\n};\n\n// acción para filtrar los perros por temperamento\nexport const FILTER_BY_TEMPERAMENT = \"FILTER_BY_TEMPERAMENT\";\nexport const filterByTemperament = temperament => async dispatch => {\n  try {\n    const res = await axios.get(`/dogs?temperament=${temperament}`);\n    dispatch({\n      type: FILTER_BY_TEMPERAMENT,\n      payload: res.data\n    });\n  } catch (error) {\n    console.error(error);\n  }\n};\n\n// acción para filtrar por origen, ya sea obtener los perros de la API externa u obtener los perros de la base de datos interna\nexport const FILTER_BY_ORIGIN = \"FILTER_BY_ORIGIN\";\nexport const filterByOrigin = origin => async dispatch => {\n  try {\n    const res = await axios.get(`/dogs?origin=${origin}`);\n    dispatch({\n      type: FILTER_BY_ORIGIN,\n      payload: res.data\n    });\n  } catch (error) {\n    console.error(error);\n  }\n};","map":{"version":3,"names":["FIND_BREEDS_BY_NAME","axios","findBreedsByName","name","dispatch","res","get","type","payload","data","error","console","GET_ALL_BREEDS","getAllBreeds","GET_ALL_TEMPERAMENTS","getAllTemperaments","FILTER_BY_TEMPERAMENT","filterByTemperament","temperament","FILTER_BY_ORIGIN","filterByOrigin","origin"],"sources":["/Users/andy/Desktop/Soy Henry || Full Stack/PROYECTO INDIVIDUAL/PI-SH-DOGS/client/src/redux/actions/index.js"],"sourcesContent":["// Action Types\nexport const FIND_BREEDS_BY_NAME = \"FIND_BREEDS_BY_NAME\";\n\nimport axios from \"axios\";\n\n// acción para encontrar razas de perro por su nombre (que coincidan con el término de búsqueda)\nexport const findBreedsByName = (name) => async (dispatch) => {\n  try {\n    const res = await axios.get(`/dogs?name=${name}`);\n    dispatch({ type: FIND_BREEDS_BY_NAME, payload: res.data });\n  } catch (error) {\n    console.error(error);\n  }\n};\n\n// acción para obtener toda la lista de razas de perros\nexport const GET_ALL_BREEDS = \"GET_ALL_BREEDS\";\nexport const getAllBreeds = () => async (dispatch) => {\n  try {\n    const res = await axios.get(\"/dogs\");\n    dispatch({ type: GET_ALL_BREEDS, payload: res.data });\n  } catch (error) {\n    console.error(error);\n  }\n};\n\n// acción para obtener todos los temperamentos de las razas de perros\nexport const GET_ALL_TEMPERAMENTS = \"GET_ALL_TEMPERAMENTS\";\nexport const getAllTemperaments = () => async (dispatch) => {\n  try {\n    const res = await axios.get(\"/temperaments\");\n    dispatch({ type: GET_ALL_TEMPERAMENTS, payload: res.data });\n  } catch (error) {\n    console.error(error);\n  }\n};\n\n// acción para filtrar los perros por temperamento\nexport const FILTER_BY_TEMPERAMENT = \"FILTER_BY_TEMPERAMENT\";\nexport const filterByTemperament = (temperament) => async (dispatch) => {\n  try {\n    const res = await axios.get(`/dogs?temperament=${temperament}`);\n    dispatch({ type: FILTER_BY_TEMPERAMENT, payload: res.data });\n  } catch (error) {\n    console.error(error);\n  }\n};\n\n// acción para filtrar por origen, ya sea obtener los perros de la API externa u obtener los perros de la base de datos interna\nexport const FILTER_BY_ORIGIN = \"FILTER_BY_ORIGIN\";\nexport const filterByOrigin = (origin) => async (dispatch) => {\n  try {\n    const res = await axios.get(`/dogs?origin=${origin}`);\n    dispatch({ type: FILTER_BY_ORIGIN, payload: res.data });\n  } catch (error) {\n    console.error(error);\n  }\n};\n"],"mappings":"AAAA;AACA,OAAO,MAAMA,mBAAmB,GAAG,qBAAqB;AAExD,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AACA,OAAO,MAAMC,gBAAgB,GAAIC,IAAI,IAAK,MAAOC,QAAQ,IAAK;EAC5D,IAAI;IACF,MAAMC,GAAG,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAE,cAAaH,IAAK,EAAC,CAAC;IACjDC,QAAQ,CAAC;MAAEG,IAAI,EAAEP,mBAAmB;MAAEQ,OAAO,EAAEH,GAAG,CAACI;IAAK,CAAC,CAAC;EAC5D,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;EACtB;AACF,CAAC;;AAED;AACA,OAAO,MAAME,cAAc,GAAG,gBAAgB;AAC9C,OAAO,MAAMC,YAAY,GAAGA,CAAA,KAAM,MAAOT,QAAQ,IAAK;EACpD,IAAI;IACF,MAAMC,GAAG,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAC,OAAO,CAAC;IACpCF,QAAQ,CAAC;MAAEG,IAAI,EAAEK,cAAc;MAAEJ,OAAO,EAAEH,GAAG,CAACI;IAAK,CAAC,CAAC;EACvD,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;EACtB;AACF,CAAC;;AAED;AACA,OAAO,MAAMI,oBAAoB,GAAG,sBAAsB;AAC1D,OAAO,MAAMC,kBAAkB,GAAGA,CAAA,KAAM,MAAOX,QAAQ,IAAK;EAC1D,IAAI;IACF,MAAMC,GAAG,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAC,eAAe,CAAC;IAC5CF,QAAQ,CAAC;MAAEG,IAAI,EAAEO,oBAAoB;MAAEN,OAAO,EAAEH,GAAG,CAACI;IAAK,CAAC,CAAC;EAC7D,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;EACtB;AACF,CAAC;;AAED;AACA,OAAO,MAAMM,qBAAqB,GAAG,uBAAuB;AAC5D,OAAO,MAAMC,mBAAmB,GAAIC,WAAW,IAAK,MAAOd,QAAQ,IAAK;EACtE,IAAI;IACF,MAAMC,GAAG,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAE,qBAAoBY,WAAY,EAAC,CAAC;IAC/Dd,QAAQ,CAAC;MAAEG,IAAI,EAAES,qBAAqB;MAAER,OAAO,EAAEH,GAAG,CAACI;IAAK,CAAC,CAAC;EAC9D,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;EACtB;AACF,CAAC;;AAED;AACA,OAAO,MAAMS,gBAAgB,GAAG,kBAAkB;AAClD,OAAO,MAAMC,cAAc,GAAIC,MAAM,IAAK,MAAOjB,QAAQ,IAAK;EAC5D,IAAI;IACF,MAAMC,GAAG,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAE,gBAAee,MAAO,EAAC,CAAC;IACrDjB,QAAQ,CAAC;MAAEG,IAAI,EAAEY,gBAAgB;MAAEX,OAAO,EAAEH,GAAG,CAACI;IAAK,CAAC,CAAC;EACzD,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;EACtB;AACF,CAAC"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"////////////////////////////////////////////////\n\nconst findNameDogDb = async name => {\n  // Busco la propiedad \"name\" en la base de datos:\n  const dbDogs = await Dog.findAll({\n    where: {\n      // Utilizo el operador \"iLike\" para hacer una busqueda en la propiedad \"name\"\n      // donde el texto buscado sea igual sin importar si esta en mayuscula o minuscula\n      name: {\n        [Op.iLike]: `%${name}%`\n      }\n    },\n    include: {\n      model: Temperament,\n      attributes: [\"name\"],\n      // Agrego \"through\" para evitar que me traiga datos adicionales de la tabla\n      through: {\n        attributes: []\n      }\n    }\n  });\n  if (dbDogs.length > 0) return dbDogs;\n};\n\n////////////////////////////////////////////////\n\nconst findNameDogApi = async name => {\n  const data = await fetch(`https://api.thedogapi.com/v1/breeds/search?q=${name}`);\n  const apiData = await data.json();\n  if (apiData.length > 0) {\n    // Se crea un objeto mapeando toda la info que encontramos en la data de respuesta\n    const dogsApi = apiData.map(dog => {\n      var _dog$image, _dog$temperament;\n      return {\n        id: dog.id,\n        name: dog.name,\n        weight: dog.weight.metric,\n        height: dog.height.metric,\n        life_span: dog.life_span,\n        image: ((_dog$image = dog.image) === null || _dog$image === void 0 ? void 0 : _dog$image.url) || null,\n        createdInDb: false,\n        // Se une todo lo que arroje la data que se encuentre en \"temperament\" en un array\n        temperaments: (_dog$temperament = dog.temperament) === null || _dog$temperament === void 0 ? void 0 : _dog$temperament.split(\",\").map(t => t.trim())\n      };\n    });\n    return dogsApi;\n  }\n};\n\n////////////////////////////////////////////////","map":{"version":3,"names":["findNameDogDb","name","dbDogs","Dog","findAll","where","Op","iLike","include","model","Temperament","attributes","through","length","findNameDogApi","data","fetch","apiData","json","dogsApi","map","dog","_dog$image","_dog$temperament","id","weight","metric","height","life_span","image","url","createdInDb","temperaments","temperament","split","t","trim"],"sources":["/Users/andy/Desktop/Soy Henry || Full Stack/PROYECTO INDIVIDUAL/PI-SH-DOGS/client/src/redux/actions/aux.js"],"sourcesContent":["////////////////////////////////////////////////\n\nconst findNameDogDb = async (name) => {\n  // Busco la propiedad \"name\" en la base de datos:\n  const dbDogs = await Dog.findAll({\n    where: {\n      // Utilizo el operador \"iLike\" para hacer una busqueda en la propiedad \"name\"\n      // donde el texto buscado sea igual sin importar si esta en mayuscula o minuscula\n      name: { [Op.iLike]: `%${name}%` },\n    },\n    include: {\n      model: Temperament,\n      attributes: [\"name\"],\n      // Agrego \"through\" para evitar que me traiga datos adicionales de la tabla\n      through: { attributes: [] },\n    },\n  });\n  if (dbDogs.length > 0) return dbDogs;\n};\n\n////////////////////////////////////////////////\n\nconst findNameDogApi = async (name) => {\n  const data = await fetch(\n    `https://api.thedogapi.com/v1/breeds/search?q=${name}`\n  );\n  const apiData = await data.json();\n  if (apiData.length > 0) {\n    // Se crea un objeto mapeando toda la info que encontramos en la data de respuesta\n    const dogsApi = apiData.map((dog) => {\n      return {\n        id: dog.id,\n        name: dog.name,\n        weight: dog.weight.metric,\n        height: dog.height.metric,\n        life_span: dog.life_span,\n        image: dog.image?.url || null,\n        createdInDb: false,\n        // Se une todo lo que arroje la data que se encuentre en \"temperament\" en un array\n        temperaments: dog.temperament?.split(\",\").map((t) => t.trim()),\n      };\n    });\n    return dogsApi;\n  }\n};\n\n////////////////////////////////////////////////\n"],"mappings":"AAAA;;AAEA,MAAMA,aAAa,GAAG,MAAOC,IAAI,IAAK;EACpC;EACA,MAAMC,MAAM,GAAG,MAAMC,GAAG,CAACC,OAAO,CAAC;IAC/BC,KAAK,EAAE;MACL;MACA;MACAJ,IAAI,EAAE;QAAE,CAACK,EAAE,CAACC,KAAK,GAAI,IAAGN,IAAK;MAAG;IAClC,CAAC;IACDO,OAAO,EAAE;MACPC,KAAK,EAAEC,WAAW;MAClBC,UAAU,EAAE,CAAC,MAAM,CAAC;MACpB;MACAC,OAAO,EAAE;QAAED,UAAU,EAAE;MAAG;IAC5B;EACF,CAAC,CAAC;EACF,IAAIT,MAAM,CAACW,MAAM,GAAG,CAAC,EAAE,OAAOX,MAAM;AACtC,CAAC;;AAED;;AAEA,MAAMY,cAAc,GAAG,MAAOb,IAAI,IAAK;EACrC,MAAMc,IAAI,GAAG,MAAMC,KAAK,CACrB,gDAA+Cf,IAAK,EAAC,CACvD;EACD,MAAMgB,OAAO,GAAG,MAAMF,IAAI,CAACG,IAAI,EAAE;EACjC,IAAID,OAAO,CAACJ,MAAM,GAAG,CAAC,EAAE;IACtB;IACA,MAAMM,OAAO,GAAGF,OAAO,CAACG,GAAG,CAAEC,GAAG,IAAK;MAAA,IAAAC,UAAA,EAAAC,gBAAA;MACnC,OAAO;QACLC,EAAE,EAAEH,GAAG,CAACG,EAAE;QACVvB,IAAI,EAAEoB,GAAG,CAACpB,IAAI;QACdwB,MAAM,EAAEJ,GAAG,CAACI,MAAM,CAACC,MAAM;QACzBC,MAAM,EAAEN,GAAG,CAACM,MAAM,CAACD,MAAM;QACzBE,SAAS,EAAEP,GAAG,CAACO,SAAS;QACxBC,KAAK,EAAE,EAAAP,UAAA,GAAAD,GAAG,CAACQ,KAAK,cAAAP,UAAA,uBAATA,UAAA,CAAWQ,GAAG,KAAI,IAAI;QAC7BC,WAAW,EAAE,KAAK;QAClB;QACAC,YAAY,GAAAT,gBAAA,GAAEF,GAAG,CAACY,WAAW,cAAAV,gBAAA,uBAAfA,gBAAA,CAAiBW,KAAK,CAAC,GAAG,CAAC,CAACd,GAAG,CAAEe,CAAC,IAAKA,CAAC,CAACC,IAAI,EAAE;MAC/D,CAAC;IACH,CAAC,CAAC;IACF,OAAOjB,OAAO;EAChB;AACF,CAAC;;AAED"},"metadata":{},"sourceType":"module"}
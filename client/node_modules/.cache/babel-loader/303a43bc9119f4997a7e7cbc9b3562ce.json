{"ast":null,"code":"// Action Types\nexport const GET_BREEDS = \"GET_ALL_BREEDS\";\nexport const GET_BREED_DETAIL = \"GET_BREED_DETAIL\";\nexport const GET_ALL_TEMPERAMENTS = \"GET_ALL_TEMPERAMENTS\";\nexport const FILTER_BY_TEMPERAMENT = \"FILTER_BY_TEMPERAMENT\";\nexport const FILTER_BY_ORIGIN = \"FILTER_BY_ORIGIN\";\nexport const SORT_BREEDS_BY_NAME = \"SORT_BREEDS_BY_NAME\";\nexport const SORT_BREEDS_BY_WEIGHT = \"SORT_BREEDS_BY_WEIGHT\";\nexport const CHANGE_PAGE = \"CHANGE_PAGE\";\nexport const CLEAR_SEARCH = \"CLEAR_SEARCH\";\nexport const CLEAR_FILTERS = \"CLEAR_FILTERS\";\nimport axios from \"axios\";\n\n// acción para encontrar razas de perro por su nombre o todos\nexport const findBreeds = name => async dispatch => {\n  try {\n    let res = [];\n    if (name) {\n      res = await axios.get(`http://localhost:3001/dogs/name?name=${name}`);\n      console.log(\"res :>> \", res);\n    } else {\n      res = await axios.get(`http://localhost:3001/dogs`);\n    }\n    dispatch({\n      type: GET_BREEDS,\n      payload: res.data\n    });\n  } catch (error) {\n    console.error(error);\n  }\n};\n\n// acción para obtener el detalle de una raza de perro en específico\nexport const getBreedDetail = id => async dispatch => {\n  try {\n    const res = await axios.get(`http://localhost:3001/dogs/id/${id}`);\n    dispatch({\n      type: GET_BREED_DETAIL,\n      payload: res.data\n    });\n  } catch (error) {\n    console.error(error);\n  }\n};\n\n// acción para obtener todos los temperamentos de las razas de perros\nexport const getAllTemperaments = () => async dispatch => {\n  try {\n    const res = await axios.get(\"http://localhost:3001/dogs/temperaments\");\n    dispatch({\n      type: GET_ALL_TEMPERAMENTS,\n      payload: res.data\n    });\n  } catch (error) {\n    console.error(error);\n  }\n};\nexport const filterByOrigin = origin => async dispatch => {\n  dispatch({\n    type: FILTER_BY_ORIGIN,\n    payload: origin\n  });\n};\nexport const filterByTemperament = temperament => async dispatch => {\n  dispatch({\n    type: FILTER_BY_TEMPERAMENT,\n    payload: temperament\n  });\n};\n\n// acción para ordenar las razas de perros alfabéticamente\nexport const sortBreedsByName = order => async dispatch => {\n  dispatch({\n    type: SORT_BREEDS_BY_NAME,\n    payload: order\n  });\n};\n\n// acción para ordenar las razas de perros por peso\nexport const sortBreedsByWeight = order => async dispatch => {\n  dispatch({\n    type: SORT_BREEDS_BY_WEIGHT,\n    payload: order\n  });\n};\n\n// acción para actualizar el número de página en la paginación\nexport const changePage = pageNumber => async dispatch => {\n  dispatch({\n    type: CHANGE_PAGE,\n    payload: pageNumber\n  });\n};\n\n// acción para limpiar los filtros de búsqueda\nexport const clearFilters = () => async dispatch => {\n  // dispatch({ type: FILTER_BY_TEMPERAMENT_CLEAR, payload: null });\n  // dispatch({ type: FILTER_BY_ORIGIN_CLEAR, payload: null });\n  dispatch({\n    type: CLEAR_FILTERS\n  });\n};\n\n// acción para limpiar la búsqueda\nexport const clearSearch = () => async dispatch => {\n  dispatch({\n    type: CLEAR_SEARCH\n  });\n};","map":{"version":3,"names":["GET_BREEDS","GET_BREED_DETAIL","GET_ALL_TEMPERAMENTS","FILTER_BY_TEMPERAMENT","FILTER_BY_ORIGIN","SORT_BREEDS_BY_NAME","SORT_BREEDS_BY_WEIGHT","CHANGE_PAGE","CLEAR_SEARCH","CLEAR_FILTERS","axios","findBreeds","name","dispatch","res","get","console","log","type","payload","data","error","getBreedDetail","id","getAllTemperaments","filterByOrigin","origin","filterByTemperament","temperament","sortBreedsByName","order","sortBreedsByWeight","changePage","pageNumber","clearFilters","clearSearch"],"sources":["/Users/andy/Desktop/Soy Henry || Full Stack/PROYECTO INDIVIDUAL/PI-SH-DOGS/client/src/redux/actions/index.js"],"sourcesContent":["// Action Types\nexport const GET_BREEDS = \"GET_ALL_BREEDS\";\nexport const GET_BREED_DETAIL = \"GET_BREED_DETAIL\";\nexport const GET_ALL_TEMPERAMENTS = \"GET_ALL_TEMPERAMENTS\";\nexport const FILTER_BY_TEMPERAMENT = \"FILTER_BY_TEMPERAMENT\";\nexport const FILTER_BY_ORIGIN = \"FILTER_BY_ORIGIN\";\nexport const SORT_BREEDS_BY_NAME = \"SORT_BREEDS_BY_NAME\";\nexport const SORT_BREEDS_BY_WEIGHT = \"SORT_BREEDS_BY_WEIGHT\";\nexport const CHANGE_PAGE = \"CHANGE_PAGE\";\nexport const CLEAR_SEARCH = \"CLEAR_SEARCH\";\nexport const CLEAR_FILTERS = \"CLEAR_FILTERS\";\n\nimport axios from \"axios\";\n\n// acción para encontrar razas de perro por su nombre o todos\nexport const findBreeds = (name) => async (dispatch) => {\n  try {\n    let res = [];\n    if (name) {\n      res = await axios.get(`http://localhost:3001/dogs/name?name=${name}`);\n      console.log(\"res :>> \", res);\n    } else {\n      res = await axios.get(`http://localhost:3001/dogs`);\n    }\n    dispatch({ type: GET_BREEDS, payload: res.data });\n  } catch (error) {\n    console.error(error);\n  }\n};\n\n// acción para obtener el detalle de una raza de perro en específico\nexport const getBreedDetail = (id) => async (dispatch) => {\n  try {\n    const res = await axios.get(`http://localhost:3001/dogs/id/${id}`);\n    dispatch({ type: GET_BREED_DETAIL, payload: res.data });\n  } catch (error) {\n    console.error(error);\n  }\n};\n\n// acción para obtener todos los temperamentos de las razas de perros\nexport const getAllTemperaments = () => async (dispatch) => {\n  try {\n    const res = await axios.get(\"http://localhost:3001/dogs/temperaments\");\n    dispatch({ type: GET_ALL_TEMPERAMENTS, payload: res.data });\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const filterByOrigin = (origin) => async (dispatch) => {\n  dispatch({ type: FILTER_BY_ORIGIN, payload: origin });\n};\n\nexport const filterByTemperament = (temperament) => async (dispatch) => {\n  dispatch({ type: FILTER_BY_TEMPERAMENT, payload: temperament });\n};\n\n// acción para ordenar las razas de perros alfabéticamente\nexport const sortBreedsByName = (order) => async (dispatch) => {\n  dispatch({ type: SORT_BREEDS_BY_NAME, payload: order });\n};\n\n// acción para ordenar las razas de perros por peso\nexport const sortBreedsByWeight = (order) => async (dispatch) => {\n  dispatch({ type: SORT_BREEDS_BY_WEIGHT, payload: order });\n};\n\n// acción para actualizar el número de página en la paginación\nexport const changePage = (pageNumber) => async (dispatch) => {\n  dispatch({ type: CHANGE_PAGE, payload: pageNumber });\n};\n\n// acción para limpiar los filtros de búsqueda\nexport const clearFilters = () => async (dispatch) => {\n  // dispatch({ type: FILTER_BY_TEMPERAMENT_CLEAR, payload: null });\n  // dispatch({ type: FILTER_BY_ORIGIN_CLEAR, payload: null });\n  dispatch({ type: CLEAR_FILTERS });\n};\n\n// acción para limpiar la búsqueda\nexport const clearSearch = () => async (dispatch) => {\n  dispatch({ type: CLEAR_SEARCH });\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}